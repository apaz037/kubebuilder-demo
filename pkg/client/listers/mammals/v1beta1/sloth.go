// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "kubebuilder-demo/pkg/apis/mammals/v1beta1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SlothLister helps list Sloths.
type SlothLister interface {
	// List lists all Sloths in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.Sloth, err error)
	// Sloths returns an object that can list and get Sloths.
	Sloths(namespace string) SlothNamespaceLister
	SlothListerExpansion
}

// slothLister implements the SlothLister interface.
type slothLister struct {
	indexer cache.Indexer
}

// NewSlothLister returns a new SlothLister.
func NewSlothLister(indexer cache.Indexer) SlothLister {
	return &slothLister{indexer: indexer}
}

// List lists all Sloths in the indexer.
func (s *slothLister) List(selector labels.Selector) (ret []*v1beta1.Sloth, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Sloth))
	})
	return ret, err
}

// Sloths returns an object that can list and get Sloths.
func (s *slothLister) Sloths(namespace string) SlothNamespaceLister {
	return slothNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SlothNamespaceLister helps list and get Sloths.
type SlothNamespaceLister interface {
	// List lists all Sloths in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.Sloth, err error)
	// Get retrieves the Sloth from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.Sloth, error)
	SlothNamespaceListerExpansion
}

// slothNamespaceLister implements the SlothNamespaceLister
// interface.
type slothNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Sloths in the indexer for a given namespace.
func (s slothNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.Sloth, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Sloth))
	})
	return ret, err
}

// Get retrieves the Sloth from the indexer for a given namespace and name.
func (s slothNamespaceLister) Get(name string) (*v1beta1.Sloth, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("sloth"), name)
	}
	return obj.(*v1beta1.Sloth), nil
}
